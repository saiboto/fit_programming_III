setwd("/media/timon/TMI640/proyecto UTP/RStudio")
## mass ----
md <- read.csv("InventarioElDiamanteTotalWithD.csv")
names(md)
# exploration----
plot(md$dryweight.kg ~ md$vol_dm3, col = md$edad)
plot(md$dryweight.kg ~ md$edad)
plot(md$dryweight.kg ~ md$variedad)
plot(md$dryweight.kg ~ md$TallosPerHa)
plot(md$dryweight.kg ~ md$Longitud)
plot(md$dryweight.kg ~ md$altura_hipsometro)
#models
attach(md)
# plot ----
plot(md$dryweight.kg~md$dap, col = "darkred", pch = 20, xlim = c(0,18), ylim = c(0,80), xlab = "Diameter at breast height (cm)", ylab = "Culm Volume (dm^3)")
mm1 <- nlm(dryweight.kg ~ a * dap^b, start = c(a = 0.35, b = 2.5))
mm1 <- nls(dryweight.kg = a * dap^b, start = c(a = 0.35, b = 2.5))
mm1 <- nls(dryweight.kg ~ a * dap^b, start = c(a = 0.35, b = 2.5))
mm1
mm2 <- nls(dryweight.kg ~ a * altura_hipsometro^b, start = c(a = 0.3, b = 2))
mm2
mm3 <- nls(dryweight.kg ~ a * dap^b * altura_hipsometro ^c, start = c(a = 0.35, b = 1.5, c = 0.5))
mm3
hist(residuals(mm3))
hist(residuals(mm2))
hist(residuals(mm1))
hist(residuals(mm3))
mm4 <- nls(dryweight.kg ~ a * d04^b, start = c(a = 0.35, b = 2.5))
mm4
mm4 <- nls(dryweight.kg ~ a * d06^b, start = c(a = 0.35, b = 2.5))
mm4
mm4 <- nls(dryweight.kg ~ a * d08^b, start = c(a = 0.35, b = 2.5))
mm4
mm4 <- nls(dryweight.kg ~ a * d10^b, start = c(a = 0.35, b = 2.5))
mm4
mm4 <- nls(dryweight.kg ~ a * d12^b, start = c(a = 0.35, b = 2.5))
mm4
#models
attach(md)
plot(md§dryweight.kg ~ md$d01)
plot(md$dryweight.kg ~ md$d01)
plot(md$dryweight.kg ~ md$d01)
plot(md§dryweight.kg ~ md$d02)
plot(md$dryweight.kg ~ md$d01)
plot(md$dryweight.kg ~ md$d02)
plot(md$dryweight.kg ~ md$d04)
plot(md$dryweight.kg ~ md$d06)
plot(md$dryweight.kg ~ md$d08)
plot(md$dryweight.kg ~ md$d10)
plot(md$dryweight.kg ~ md$d12)
plot(md$dryweight.kg ~ md$Longitud)
plot(md$dryweight.kg ~ md$d01)
plot(md$dryweight.kg ~ md$d02)
plot(md$dryweight.kg ~ md$d04)
plot(md$dryweight.kg ~ md$d06)
plot(md$dryweight.kg ~ md$d08)
plot(md$dryweight.kg ~ md$d08)
plot(md$dryweight.kg ~ md$d08)
plot(md$dryweight.kg ~ md$d06)
plot(md$dryweight.kg ~ md$d08)
plot(md$dryweight.kg ~ md$d10)
plot(md$dryweight.kg ~ md$d12)
nls(dryweight.kg ~ a * d08^b, start = c(a = 0.35, b = 2.5))
nls(dryweight.kg ~ a * d10^b, start = c(a = 0.35, b = 2.5))
md <- md[ which(md$ID != 24),]
#models
attach(md)
mm1 <- nls(dryweight.kg ~ a * dap^b, start = c(a = 0.35, b = 2.5))
mm1
mm2 <- nls(dryweight.kg ~ a * altura_hipsometro^b, start = c(a = 0.3, b = 2))
mm2
mm3 <- nls(dryweight.kg ~ a * dap^b * altura_hipsometro ^c, start = c(a = 0.35, b = 1.5, c = 0.5))
mm3
mm4 <- nls(dryweight.kg ~ a * d10^b, start = c(a = 0.35, b = 2.5))
mm4
plot(md$dryweight.kg ~ md$d01)
plot(md$dryweight.kg ~ md$d02)
plot(md$dryweight.kg ~ md$d04)
plot(md$dryweight.kg ~ md$d06)
plot(md$dryweight.kg ~ md$d08)
plot(md$dryweight.kg ~ md$d10)
plot(md$dryweight.kg ~ md$d04)
plot(md$dryweight.kg ~ md$d06)
mm4 <- nls(dryweight.kg ~ a * d06^b, start = c(a = 0.35, b = 2.5))
mm4
mm4 <- nls(dryweight.kg ~ a * d08^b, start = c(a = 0.35, b = 2.5))
mm4
mm4 <- nls(dryweight.kg ~ a * d04^b, start = c(a = 0.35, b = 2.5))
mm4
mm4 <- nls(dryweight.kg ~ a * d06^b, start = c(a = 0.35, b = 2.5))
mm4
plot(md$dryweight.kg ~ md$d01)
plot(md$dryweight.kg ~ md$d02)
plot(md$dryweight.kg ~ md$d04)
plot(md$dryweight.kg ~ md$d06)
plot(md$dryweight.kg ~ md$d08)
plot(md$dryweight.kg ~ md$d10)
plot(md$dryweight.kg ~ md$d12)
#models
attach(md)
# plot ----
plot(md$dryweight.kg~md$dap, col = "darkred", pch = 20, xlim = c(0,18), ylim = c(0,80), xlab = "Diameter at breast height (cm)", ylab = "Culm Volume (dm^3)")
grid()
points(d$VolumenNetoSmallian*1000~d$DAP, col = "orange4", pch = 20)
lines(md$dbh, predict(mm1))
lines(md$dap, predict(mm1))
x <- seq(0,30,0.1)
mm1
lines(x,0.2715*x^2.0653) #mm1
# plot ----
plot(md$dryweight.kg~md$dap, col = "darkred", pch = 20, xlim = c(0,18), ylim = c(0,80), xlab = "Diameter at breast height (cm)", ylab = "Culm Volume (dm^3)")
grid()
points(d2$vol_dm3~d2$dap, col = "darkred", pch = 20)
lines(x,0.2715*x^2.0653) #mm1
points(md$dryweight.kg~md$dap, col = "darkred", pch = 20)
mm2 <- nls(dryweight.kg ~ a * altura_hipsometro^b, start = c(a = 0.3, b = 2))
mm2
lines(x,0.4255*x^1.685, col) #mm2
plot(md$dryweight.kg~md$altura_hipsometro, col = "darkred", pch = 20, xlim = c(0,18), ylim = c(0,80), xlab = "Diameter at breast height (cm)", ylab = "Culm Volume (dm^3)")
plot(md$dryweight.kg~md$altura_hipsometro, col = "darkred", pch = 20, xlim = c(0,18), ylim = c(0,80), xlab = "Laser height measurement (m)", ylab = "Culm Volume (dm^3)")
grid()
points(md$dryweight.kg~md$altura_hipsometro, col = "darkred", pch = 20)
lines(x,0.4255*x^1.685, col) #mm2
lines(x,0.4255*x^1.685) #mm2
plot(md$dryweight.kg~md$altura_hipsometro, col = "darkred", pch = 20, xlim = c(0,18), ylim = c(0,80), xlab = "Laser height measurement (m)", ylab = "Culm dry mass (kg)")
plot(md$dryweight.kg~md$dap, col = "darkred", pch = 20, xlim = c(0,18), ylim = c(0,80), xlab = "Diameter (cm)", ylab = "Culm dry mass (kg)")
grid()
points(md$dryweight.kg~md$dap, col = "darkred", pch = 20)
points(md$dryweight.kg~md$dap, col = "darkred", pch = 20)
points(md$dryweight.kg~md$d00, col = "black", pch = 20)
points(md$dryweight.kg~md$d02, col = "darkblue", pch = 20)
plot(md$dryweight.kg~md$dap, col = "darkred", pch = 20, xlim = c(0,18), ylim = c(0,80), xlab = "Diameter (cm)", ylab = "Culm dry mass (kg)")
plot(md$dryweight.kg~md$dap, col = "darkred", pch = 20, xlim = c(0,18), ylim = c(0,80), xlab = "Diameter (cm)", ylab = "Culm dry mass (kg)")
grid()
points(md$dryweight.kg~md$dap, col = "darkred", pch = 20)
md$d00
md$dap
md
asnumeric(md$d00)
points(md$dryweight.kg~as.numeric(md$d00)/10, col = "black", pch = 20)
as.numeric(md$d00)
points(md$dryweight.kg~as.numeric(md$d00, sep = ".")/10, col = "black", pch = 20)
as.numeric(md$d00, sep = ".")
points(md$dryweight.kg~md$d02/10, col = "darkblue", pch = 20)
md$d02
md$d02/10
points(md$dryweight.kg~md$d02/10, col = "darkblue", pch = 20)
points(md$dryweight.kg,md$d04/10, col = "cyan3", pch = 20)
md$dryweight.kg
points(md$dryweight.kg ~ (md$d04/10), col = "cyan3", pch = 20)
points(md$d04/10,md$dryweight.kg, col = "cyan3", pch = 20)
plot(md$dryweight.kg~md$dap, col = "darkred", pch = 20, xlim = c(0,18), ylim = c(0,80), xlab = "Diameter (cm)", ylab = "Culm dry mass (kg)")
grid()
points(md$dryweight.kg~md$dap, col = "darkred", pch = 20)
points(md$dryweight.kg~as.numeric(md$d00)/10, col = "black", pch = 20)
points(md$d02/10,md$dryweight.kg, col = "darkblue", pch = 20)
points(md$d04/10,md$dryweight.kg, col = "cyan3", pch = 20)
points(md$d06/10,md$dryweight.kg, col = "yellow4", pch = 20)
points(md$d08/10,md$dryweight.kg, col = "green", pch = 20)
points(md$d10/10,md$dryweight.kg, col = "green3", pch = 20)
lines(x,0.4255*x^1.685) #mm2
plot(c(,), col = "darkred", pch = 20, xlim = c(0,18), ylim = c(0,80), xlab = "Diameter (cm)", ylab = "Culm dry mass (kg)")
plot(c(), col = "darkred", pch = 20, xlim = c(0,18), ylim = c(0,80), xlab = "Diameter (cm)", ylab = "Culm dry mass (kg)")
points(md$dryweight.kg~md$dap, col = "darkred", pch = 20)
plot(c(), col = "darkred", pch = 20, xlim = c(0,18), ylim = c(0,80), xlab = "Diameter at breast height (cm)", ylab = "Culm dry mass (kg)")
points(md$dryweight.kg~md$dap, col = "darkred", pch = 20)
plot(c(), col = "darkred", pch = 20, xlim = c(0,18), ylim = c(0,80), xlab = "Diameter at breast height (cm)", ylab = "Culm dry mass (kg)")
points(md$d06/10,md$dryweight.kg, col = "yellow4", pch = 20)
plot(c(), col = "darkred", pch = 20, xlim = c(0,18), ylim = c(0,80), xlab = "Diameter at height 6 m (cm)", ylab = "Culm dry mass (kg)")
points(md$d06/10,md$dryweight.kg, col = "yellow4", pch = 20)
plot(c(), col = "darkred", pch = 20, xlim = c(0,18), ylim = c(0,80), xlab = "Diameter at height 10 m (cm)", ylab = "Culm dry mass (kg)")
points(md$d10/10,md$dryweight.kg, col = "green3", pch = 20)
points(md$d12/10,md$dryweight.kg, col = "green3", pch = 20)
plot(c(), col = "darkred", pch = 20, xlim = c(0,18), ylim = c(0,80), xlab = "Diameter at height 10 m (cm)", ylab = "Culm dry mass (kg)")
points(md$d12/10,md$dryweight.kg, col = "green3", pch = 20)
points(md$d10/10,md$dryweight.kg, col = "green3", pch = 20)
plot(c(), col = "darkred", pch = 20, xlim = c(0,18), ylim = c(0,80), xlab = "Diameter at height 10 m (cm)", ylab = "Culm dry mass (kg)")
grid()
points(md$d10/10,md$dryweight.kg, col = "green4", pch = 20)
plot(c(), col = "darkred", pch = 20, xlim = c(0,18), ylim = c(0,80), xlab = "Diameter at height 10 m (cm)", ylab = "Culm dry mass (kg)")
grid()
points(md$d10/10,md$dryweight.kg, col = "green4", pch = 20)
summary(mm1)
mm4 <- nls(dryweight.kg ~ a * d06^b, start = c(a = 0.35, b = 2.5))
summary(mm4)
summary(mm3)
AIC(mm1, mm2, mm3, mm4)
AIC(mm1, mm3, mm4)
A <- [12,23,34,45]
A <- c(12,23,34,45)
B <- c(10, 23, 34, 45)
A == B
count(A==B)
sum(A==B)
c <- c(12,20, 30, 45)
sum(A==C)
C <- c(12,20, 30, 45)
sum(A==C)
# korrigieren um den Volumenverlust bei der Vielecks-Darstellung
polygon_factor = c()
for (n in 3:50) {
alpha <- pi / n
area <- n*cos(alpha)*sin(alpha)
polygon_factor[n] <- area/pi
}
polygon_factor
polygon_factor[20]
polygon_factor[30]
polygon_factor[10]
polygon_factor[8]
polygon_factor[5]
polygon_factor[50]
load("~/MA/MA6big/data_read.RData")
plot(a$Front.Area, col = a$stem_file)
plot(a$Front.Face.Area, col = a$stem_file)
# general starting procedure----
require('dplyr')
require('beepr')
setwd('/home/timon/fit_programming_III/Results')
setwd('~/MA/MA6big/ResultsV5')
#when reading for the first time:
ar <- data.frame() # ar = allresults
for(i in c(1:9774)){
filename <- paste0("Results", i, ".csv")
r <- read.csv(filename)
r$con <- i
ar <- rbind(ar,r)
}
beep(2)
ar$Box.overflow <- ifelse(ar$Box.overflow == "True", TRUE, FALSE)
ar$Deflation.Factor <- as.numeric(ar$Deflation.Factor)
ar$runthrough_id <-  paste0(ar$con, "-", ar$Iteration)
settings <- read.csv('~/fit_programming_III/Settings/Settings9774.csv')
alr <- merge(x = ar, y = settings, by.x = "con", by.y = "settings_id", all.x = T)
# read stem sets ----
allstemfiles <- list.files('~/fit_programming_III/Stems')
stemdata <- data.frame()
for(file in allstemfiles){
set <- read.csv(paste0('~/fit_programming_III/Stems/', file))
set$volume <- pi/3/4/2*set$length*((sqrt((set$bottom_diam_x^2+set$bottom_diam_y^2)/2)*sqrt((set$middle_diam_x^2+set$middle_diam_y^2)/2)+set$bottom_diam_x^2+set$bottom_diam_y^2+2*set$middle_diam_x^2+2*set$middle_diam_y^2+set$top_diam_x+set$top_diam_y+sqrt((set$top_diam_x^2+set$top_diam_y^2)/2)*sqrt((set$middle_diam_x^2+set$middle_diam_y^2)/2)))
number <- nrow(set)
length.mean <- mean(set$length)
length.sd <- sd(set$length)
taper.mean <- mean((set$bottom_diam_x-set$top_diam_x)/set$length)*100 # unit: cm per m
taper.sd <- sd((set$bottom_diam_x-set$top_diam_x)/set$length)*100
mdiam.mean <- mean(set$middle_diam_x)
mdiam.sd <- sd(set$middle_diam_x)
ellipticity.mean <- mean(set$middle_diam_y/set$middle_diam_x)
ellipticity.sd <- sd(set$middle_diam_y/set$middle_diam_x)
bend.mean <- mean(set$bend)
bend.sd <- mean(set$bend)
bent.frac <- sum(set$bend != 0)/nrow(set)
if(sum(set$bend != 0) > 0){
bentset <- set[which(set$bend != 0), ]
bentbend.mean <- mean(bentset$bend)
bentbend.sd <- sd(bentset$bend)
}else{
bentbend.mean <- 0
bentbend.sd <- 0
}
volume <- sum(set$volume)
stemdata <- rbind(stemdata, c(number, volume, length.mean, length.sd, taper.mean, taper.sd,
mdiam.mean, mdiam.sd, ellipticity.mean, ellipticity.sd,
bend.mean, bend.sd, bent.frac, bentbend.mean, bentbend.sd))
}
stemdata$stemfile <- allstemfiles
names(stemdata) <- c("stems.number", "stems.total.volume",
"stems.length.mean", "stems.length.sd",
"stems.taper.mean", "stems.taper.sd",
"stems.diam.mean", "stems.diam.sd", "stems.ellipt.mean", "stems.ellipt.sd",
"stems.bend.mean", "stems.bend.sd", "stems.bent.frac.",
"stems.bentbend.mean", "stems.bentbend.sd", "stemfile")
a <- merge(alr, stemdata, by.x = "stem_file", by.y = "stemfile")
# divide into parts
a <- a[order(a$con, a$Iteration),]
a$part2 <- ifelse(a$con > 1674, TRUE, FALSE)
b <- a[which(a$part2 == FALSE),]
c <- a[which(a$part2),]
# aggregate by con
agr <- aggregate(ar, by = list(ar$con), FUN = mean, na.action = na.omit)
ag <- merge(x = agr, y = settings, by.x = "con", by.y = "settings_id", all.x = T)
b.ag <- ag[which(ag$con <= 1774),]
c.ag <- ag[which(ag$con > 1774),]
plot(ag$Out.Of.Box ~ ag$Dislocated.any., col  = ag$lateral_friction*9, cex = 0.7, pch = 20)
plot(ag$Out.Of.Box ~ ag$Dislocated.any., col  = ag$drop_algorithm, cex = 0.7, pch = 20)
plot(ag$Out.Of.Box ~ ag$Dislocated.any., cex = 0.7, pch = 20, col = ag$n_sides)
plot(ag$Out.Of.Box ~ ag$Dislocated.any., col  = ag$lateral_friction*9, cex = 0.7, pch = 20)
plot(ag$Out.Of.Box ~ ag$Dislocated.any., col  = ag$drop_algorithm, cex = 0.7, pch = 20)
legend(0, 2.7, legend = levels(ag$drop_algorithm), col = 1:5, pch = 20, cex = 0.7)
plot(ag$Out.Of.Box ~ ag$Dislocated.any., cex = 0.7, pch = 20, col = ag$n_sides)
legend(0, 2.7, legend = c(10,20,30,40), col = c(10,20,30,40), pch = 20, cex = 0.7)
save.image("~/MA/MA6big/read_data_V5.RData")
